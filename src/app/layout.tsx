import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Providers from "@/redux/Provider";
import { cookies } from "next/headers";
import HydrateUser from "@/components/HydrateUser";
import { Metadata } from "next";
// import AuthContext from "@/context/AuthContext";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Blogs app",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
  modal: any;
}>) {
  const cookieStore = await cookies();
  const userCookie = cookieStore.get("user");
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Providers>
          {userCookie?.value && (
            <HydrateUser user={JSON.parse(userCookie.value)} />
          )}
          {children}
        </Providers>
      </body>
    </html>
  );
}
